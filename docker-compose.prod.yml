version: '3.8'

# Configuration Docker Compose pour production avec réseau externe
services:
  # Base de données PostgreSQL
  regisflow-db:
    image: postgres:15-alpine
    container_name: regisflow-db
    environment:
      POSTGRES_DB: regisflow
      POSTGRES_USER: regisflow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-RegisFlow2024!PostgreSQL}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U regisflow -d regisflow || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  # Application RegisFlow
  regisflow:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_ENV=production
    container_name: regisflow-app
    depends_on:
      regisflow-db:
        condition: service_healthy
    pull_policy: never
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://regisflow:${POSTGRES_PASSWORD:-RegisFlow2024!PostgreSQL}@regisflow-db:5432/regisflow
      SESSION_SECRET: ${SESSION_SECRET:-RegisFlow2024SessionSecretKey1234567890ABCDEF}
      TZ: ${TZ:-Europe/Paris}
      SECURE_COOKIES: ${SECURE_COOKIES:-false}
      DATA_RETENTION_MONTHS: ${DATA_RETENTION_MONTHS:-19}
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS:-90}
      MAX_BACKUP_COUNT: ${MAX_BACKUP_COUNT:-20}
    volumes:
      - backup_data:/app/backups
      - logs_data:/app/logs
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

# Volumes persistants
volumes:
  postgres_data:
    driver: local
  backup_data:
    driver: local
  logs_data:
    driver: local

# Utilisation du réseau nginx_default pour production Replit
networks:
  default:
    external: true
    name: nginx_default