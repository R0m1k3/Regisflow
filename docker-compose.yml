version: '3.8'

# Configuration Docker Compose pour RegisFlow
# Installation simple sans configuration réseau
services:
  # Base de données PostgreSQL
  regisflow-db:
    image: postgres:15-alpine
    container_name: regisflow-db
    environment:
      POSTGRES_DB: regisflow
      POSTGRES_USER: regisflow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-RegisFlow2024!PostgreSQL}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U regisflow -d regisflow"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Application RegisFlow
  regisflow:
    build: 
      context: .
      target: production
    container_name: regisflow-app
    depends_on:
      regisflow-db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://regisflow:${POSTGRES_PASSWORD:-RegisFlow2024!PostgreSQL}@regisflow-db:5432/regisflow
      SESSION_SECRET: ${SESSION_SECRET:-RegisFlow2024SessionSecretKey1234567890ABCDEF}
      TZ: ${TZ:-Europe/Paris}
      SECURE_COOKIES: ${SECURE_COOKIES:-false}
      DATA_RETENTION_MONTHS: ${DATA_RETENTION_MONTHS:-19}
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS:-90}
      MAX_BACKUP_COUNT: ${MAX_BACKUP_COUNT:-20}
    volumes:
      - backup_data:/app/backups
      - logs_data:/app/logs
    ports:
      - "5000:5000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s

# Volumes persistants (Docker gère automatiquement)
volumes:
  postgres_data:
  backup_data:
  logs_data:

# Réseau par défaut (pas de configuration IP)
networks:
  default:
    driver: bridge